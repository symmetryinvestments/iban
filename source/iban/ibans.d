module iban.ibans;

import iban.structures;

IBANData[string] getIBANs() @safe {
	static bool hasBeenInited = false;
	static IBANData[string] ret;
	if(!hasBeenInited) {
		ret["AL"] = IBANData("", "8!n16!c", "AL2!n8!n16!c", 24, 28, ["branch_code":[3, 8], "bank_code":[0, 3], "account_code":[8, 24]], [Parse(ParseType.number, "8!n", 8),Parse(ParseType.alphanum, "16!c", 16)], [Parse(ParseType.direct, "AL", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "8!n", 8),Parse(ParseType.alphanum, "16!c", 16)]);
		ret["GF"] = IBANData("", "5!n5!n11!c2!n", "FR2!n5!n5!n11!c2!n", 23, 27, ["branch_code":[5, 5], "bank_code":[0, 5], "account_code":[5, 23]], [Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "11!c", 11),Parse(ParseType.number, "2!n", 2)], [Parse(ParseType.direct, "FR", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "11!c", 11),Parse(ParseType.number, "2!n", 2)]);
		ret["ST"] = IBANData("", "4!n4!n11!n2!n", "ST2!n4!n4!n11!n2!n", 21, 25, ["branch_code":[4, 8], "bank_code":[0, 4], "account_code":[8, 21]], [Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "11!n", 11),Parse(ParseType.number, "2!n", 2)], [Parse(ParseType.direct, "ST", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "11!n", 11),Parse(ParseType.number, "2!n", 2)]);
		ret["FI"] = IBANData("", "3!n11!n", "FI2!n3!n11!n", 14, 18, ["branch_code":[3, 3], "bank_code":[0, 3], "account_code":[3, 14]], [Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "11!n", 11)], [Parse(ParseType.direct, "FI", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "11!n", 11)]);
		ret["RE"] = IBANData("", "5!n5!n11!c2!n", "FR2!n5!n5!n11!c2!n", 23, 27, ["branch_code":[5, 5], "bank_code":[0, 5], "account_code":[5, 23]], [Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "11!c", 11),Parse(ParseType.number, "2!n", 2)], [Parse(ParseType.direct, "FR", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "11!c", 11),Parse(ParseType.number, "2!n", 2)]);
		ret["MR"] = IBANData("", "5!n5!n11!n2!n", "MR2!n5!n5!n11!n2!n", 23, 27, ["branch_code":[5, 10], "bank_code":[0, 5], "account_code":[10, 23]], [Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "11!n", 11),Parse(ParseType.number, "2!n", 2)], [Parse(ParseType.direct, "MR", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "11!n", 11),Parse(ParseType.number, "2!n", 2)]);
		ret["GP"] = IBANData("", "5!n5!n11!c2!n", "FR2!n5!n5!n11!c2!n", 23, 27, ["branch_code":[5, 5], "bank_code":[0, 5], "account_code":[5, 23]], [Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "11!c", 11),Parse(ParseType.number, "2!n", 2)], [Parse(ParseType.direct, "FR", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "11!c", 11),Parse(ParseType.number, "2!n", 2)]);
		ret["GR"] = IBANData("", "3!n4!n16!c", "GR2!n3!n4!n16!c", 23, 27, ["branch_code":[3, 7], "bank_code":[0, 3], "account_code":[7, 23]], [Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "4!n", 4),Parse(ParseType.alphanum, "16!c", 16)], [Parse(ParseType.direct, "GR", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "4!n", 4),Parse(ParseType.alphanum, "16!c", 16)]);
		ret["NC"] = IBANData("", "5!n5!n11!c2!n", "FR2!n5!n5!n11!c2!n", 23, 27, ["branch_code":[5, 5], "bank_code":[0, 5], "account_code":[5, 23]], [Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "11!c", 11),Parse(ParseType.number, "2!n", 2)], [Parse(ParseType.direct, "FR", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "11!c", 11),Parse(ParseType.number, "2!n", 2)]);
		ret["GE"] = IBANData("", "2!a16!n", "GE2!n2!a16!n", 18, 22, ["branch_code":[2, 2], "bank_code":[0, 2], "account_code":[2, 18]], [Parse(ParseType.alpha, "2!a", 2),Parse(ParseType.number, "16!n", 16)], [Parse(ParseType.direct, "GE", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.alpha, "2!a", 2),Parse(ParseType.number, "16!n", 16)]);
		ret["TF"] = IBANData("", "5!n5!n11!c2!n", "FR2!n5!n5!n11!c2!n", 23, 27, ["branch_code":[5, 5], "bank_code":[0, 5], "account_code":[5, 23]], [Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "11!c", 11),Parse(ParseType.number, "2!n", 2)], [Parse(ParseType.direct, "FR", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "11!c", 11),Parse(ParseType.number, "2!n", 2)]);
		ret["JE"] = IBANData("", "4!a6!n8!n", "GB2!n4!a6!n8!n", 18, 22, ["branch_code":[4, 10], "bank_code":[0, 4], "account_code":[10, 18]], [Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.number, "6!n", 6),Parse(ParseType.number, "8!n", 8)], [Parse(ParseType.direct, "GB", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.number, "6!n", 6),Parse(ParseType.number, "8!n", 8)]);
		ret["DO"] = IBANData("", "4!c20!n", "DO2!n4!c20!n", 24, 28, ["branch_code":[4, 4], "bank_code":[0, 4], "account_code":[4, 24]], [Parse(ParseType.alphanum, "4!c", 4),Parse(ParseType.number, "20!n", 20)], [Parse(ParseType.direct, "DO", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.alphanum, "4!c", 4),Parse(ParseType.number, "20!n", 20)]);
		ret["DK"] = IBANData("", "4!n9!n1!n", "DK2!n4!n9!n1!n", 14, 18, ["branch_code":[4, 4], "bank_code":[0, 4], "account_code":[4, 14]], [Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "9!n", 9),Parse(ParseType.number, "1!n", 1)], [Parse(ParseType.direct, "DK", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "9!n", 9),Parse(ParseType.number, "1!n", 1)]);
		ret["BG"] = IBANData("", "4!a4!n2!n8!c", "BG2!n4!a4!n2!n8!c", 18, 22, ["branch_code":[4, 8], "bank_code":[0, 4], "account_code":[8, 18]], [Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "2!n", 2),Parse(ParseType.alphanum, "8!c", 8)], [Parse(ParseType.direct, "BG", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "2!n", 2),Parse(ParseType.alphanum, "8!c", 8)]);
		ret["MT"] = IBANData("", "4!a5!n18!c", "MT2!n4!a5!n18!c", 27, 31, ["branch_code":[4, 9], "bank_code":[0, 4], "account_code":[9, 27]], [Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "18!c", 18)], [Parse(ParseType.direct, "MT", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "18!c", 18)]);
		ret["BE"] = IBANData("", "3!n7!n2!n", "BE2!n3!n7!n2!n", 12, 16, ["branch_code":[3, 3], "bank_code":[0, 3], "account_code":[3, 12]], [Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "7!n", 7),Parse(ParseType.number, "2!n", 2)], [Parse(ParseType.direct, "BE", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "7!n", 7),Parse(ParseType.number, "2!n", 2)]);
		ret["LT"] = IBANData("", "5!n11!n", "LT2!n5!n11!n", 16, 20, ["branch_code":[5, 5], "bank_code":[0, 5], "account_code":[5, 16]], [Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "11!n", 11)], [Parse(ParseType.direct, "LT", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "11!n", 11)]);
		ret["UA"] = IBANData("", "6!n19!c", "UA2!n6!n19!c", 25, 29, ["branch_code":[6, 6], "bank_code":[0, 6], "account_code":[6, 25]], [Parse(ParseType.number, "6!n", 6),Parse(ParseType.alphanum, "19!c", 19)], [Parse(ParseType.direct, "UA", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "6!n", 6),Parse(ParseType.alphanum, "19!c", 19)]);
		ret["ES"] = IBANData("", "4!n4!n1!n1!n10!n", "ES2!n4!n4!n1!n1!n10!n", 20, 24, ["branch_code":[4, 8], "bank_code":[0, 4], "account_code":[8, 20]], [Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "1!n", 1),Parse(ParseType.number, "1!n", 1),Parse(ParseType.number, "10!n", 10)], [Parse(ParseType.direct, "ES", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "1!n", 1),Parse(ParseType.number, "1!n", 1),Parse(ParseType.number, "10!n", 10)]);
		ret["MC"] = IBANData("", "5!n5!n11!c2!n", "MC2!n5!n5!n11!c2!n", 23, 27, ["branch_code":[5, 10], "bank_code":[0, 5], "account_code":[10, 23]], [Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "11!c", 11),Parse(ParseType.number, "2!n", 2)], [Parse(ParseType.direct, "MC", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "11!c", 11),Parse(ParseType.number, "2!n", 2)]);
		ret["IS"] = IBANData("", "4!n2!n6!n10!n", "IS2!n4!n2!n6!n10!n", 22, 26, ["branch_code":[2, 4], "bank_code":[0, 2], "account_code":[4, 22]], [Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "6!n", 6),Parse(ParseType.number, "10!n", 10)], [Parse(ParseType.direct, "IS", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "6!n", 6),Parse(ParseType.number, "10!n", 10)]);
		ret["YT"] = IBANData("", "5!n5!n11!c2!n", "FR2!n5!n5!n11!c2!n", 23, 27, ["branch_code":[5, 5], "bank_code":[0, 5], "account_code":[5, 23]], [Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "11!c", 11),Parse(ParseType.number, "2!n", 2)], [Parse(ParseType.direct, "FR", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "11!c", 11),Parse(ParseType.number, "2!n", 2)]);
		ret["RO"] = IBANData("", "4!a16!c", "RO2!n4!a16!c", 20, 24, ["branch_code":[4, 4], "bank_code":[0, 4], "account_code":[4, 20]], [Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.alphanum, "16!c", 16)], [Parse(ParseType.direct, "RO", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.alphanum, "16!c", 16)]);
		ret["CZ"] = IBANData("", "4!n6!n10!n", "CZ2!n4!n6!n10!n", 20, 24, ["branch_code":[4, 4], "bank_code":[0, 4], "account_code":[4, 20]], [Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "6!n", 6),Parse(ParseType.number, "10!n", 10)], [Parse(ParseType.direct, "CZ", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "6!n", 6),Parse(ParseType.number, "10!n", 10)]);
		ret["AD"] = IBANData("", "4!n4!n12!c", "AD2!n4!n4!n12!c", 20, 24, ["branch_code":[4, 8], "bank_code":[0, 4], "account_code":[8, 20]], [Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "4!n", 4),Parse(ParseType.alphanum, "12!c", 12)], [Parse(ParseType.direct, "AD", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "4!n", 4),Parse(ParseType.alphanum, "12!c", 12)]);
		ret["SA"] = IBANData("", "2!n18!c", "SA2!n2!n18!c", 20, 24, ["branch_code":[2, 2], "bank_code":[0, 2], "account_code":[2, 20]], [Parse(ParseType.number, "2!n", 2),Parse(ParseType.alphanum, "18!c", 18)], [Parse(ParseType.direct, "SA", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.alphanum, "18!c", 18)]);
		ret["KZ"] = IBANData("", "3!n13!c", "KZ2!n3!n13!c", 16, 20, ["branch_code":[3, 3], "bank_code":[0, 3], "account_code":[3, 16]], [Parse(ParseType.number, "3!n", 3),Parse(ParseType.alphanum, "13!c", 13)], [Parse(ParseType.direct, "KZ", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "3!n", 3),Parse(ParseType.alphanum, "13!c", 13)]);
		ret["SV"] = IBANData("", "4!a20!n", "SV2!n4!a20!n", 24, 28, ["branch_code":[4, 4], "bank_code":[0, 4], "account_code":[4, 24]], [Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.number, "20!n", 20)], [Parse(ParseType.direct, "SV", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.number, "20!n", 20)]);
		ret["BA"] = IBANData("", "3!n3!n8!n2!n", "BA2!n3!n3!n8!n2!n", 16, 20, ["branch_code":[3, 6], "bank_code":[0, 3], "account_code":[6, 16]], [Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "8!n", 8),Parse(ParseType.number, "2!n", 2)], [Parse(ParseType.direct, "BA", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "8!n", 8),Parse(ParseType.number, "2!n", 2)]);
		ret["BL"] = IBANData("", "5!n5!n11!c2!n", "FR2!n5!n5!n11!c2!n", 23, 27, ["branch_code":[5, 5], "bank_code":[0, 5], "account_code":[5, 23]], [Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "11!c", 11),Parse(ParseType.number, "2!n", 2)], [Parse(ParseType.direct, "FR", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "11!c", 11),Parse(ParseType.number, "2!n", 2)]);
		ret["IQ"] = IBANData("", "4!a3!n12!n", "IQ2!n4!a3!n12!n", 19, 23, ["branch_code":[4, 7], "bank_code":[0, 4], "account_code":[7, 19]], [Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "12!n", 12)], [Parse(ParseType.direct, "IQ", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "12!n", 12)]);
		ret["PK"] = IBANData("", "4!a16!c", "PK2!n4!a16!c", 20, 24, ["branch_code":[4, 4], "bank_code":[0, 4], "account_code":[4, 20]], [Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.alphanum, "16!c", 16)], [Parse(ParseType.direct, "PK", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.alphanum, "16!c", 16)]);
		ret["SC"] = IBANData("", "4!a2!n2!n16!n3!a", "SC2!n4!a2!n2!n16!n3!a", 27, 31, ["branch_code":[6, 8], "bank_code":[0, 6], "account_code":[8, 27]], [Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "16!n", 16),Parse(ParseType.alpha, "3!a", 3)], [Parse(ParseType.direct, "SC", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "16!n", 16),Parse(ParseType.alpha, "3!a", 3)]);
		ret["CH"] = IBANData("", "5!n12!c", "CH2!n5!n12!c", 17, 21, ["branch_code":[5, 5], "bank_code":[0, 5], "account_code":[5, 17]], [Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "12!c", 12)], [Parse(ParseType.direct, "CH", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "12!c", 12)]);
		ret["RS"] = IBANData("", "3!n13!n2!n", "RS2!n3!n13!n2!n", 18, 22, ["branch_code":[3, 3], "bank_code":[0, 3], "account_code":[3, 18]], [Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "13!n", 13),Parse(ParseType.number, "2!n", 2)], [Parse(ParseType.direct, "RS", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "13!n", 13),Parse(ParseType.number, "2!n", 2)]);
		ret["ME"] = IBANData("", "3!n13!n2!n", "ME2!n3!n13!n2!n", 18, 22, ["branch_code":[3, 3], "bank_code":[0, 3], "account_code":[3, 18]], [Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "13!n", 13),Parse(ParseType.number, "2!n", 2)], [Parse(ParseType.direct, "ME", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "13!n", 13),Parse(ParseType.number, "2!n", 2)]);
		ret["JO"] = IBANData("", "4!a4!n18!c", "JO2!n4!a4!n18!c", 26, 30, ["branch_code":[4, 8], "bank_code":[4, 8], "account_code":[8, 26]], [Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.number, "4!n", 4),Parse(ParseType.alphanum, "18!c", 18)], [Parse(ParseType.direct, "JO", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.number, "4!n", 4),Parse(ParseType.alphanum, "18!c", 18)]);
		ret["PT"] = IBANData("", "4!n4!n11!n2!n", "PT2!n4!n4!n11!n2!n", 21, 25, ["branch_code":[4, 4], "bank_code":[0, 4], "account_code":[4, 21]], [Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "11!n", 11),Parse(ParseType.number, "2!n", 2)], [Parse(ParseType.direct, "PT", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "11!n", 11),Parse(ParseType.number, "2!n", 2)]);
		ret["GT"] = IBANData("", "4!c20!c", "GT2!n4!c20!c", 24, 28, ["branch_code":[4, 4], "bank_code":[0, 4], "account_code":[4, 24]], [Parse(ParseType.alphanum, "4!c", 4),Parse(ParseType.alphanum, "20!c", 20)], [Parse(ParseType.direct, "GT", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.alphanum, "4!c", 4),Parse(ParseType.alphanum, "20!c", 20)]);
		ret["EG"] = IBANData("", "4!n4!n17!n", "EG2!n4!n4!n17!n", 25, 29, ["branch_code":[4, 8], "bank_code":[0, 4], "account_code":[8, 25]], [Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "17!n", 17)], [Parse(ParseType.direct, "EG", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "17!n", 17)]);
		ret["AT"] = IBANData("", "5!n11!n", "AT2!n5!n11!n", 16, 20, ["branch_code":[5, 5], "bank_code":[0, 5], "account_code":[5, 16]], [Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "11!n", 11)], [Parse(ParseType.direct, "AT", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "11!n", 11)]);
		ret["SI"] = IBANData("", "5!n8!n2!n", "SI2!n5!n8!n2!n", 15, 19, ["branch_code":[5, 5], "bank_code":[0, 5], "account_code":[5, 15]], [Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "8!n", 8),Parse(ParseType.number, "2!n", 2)], [Parse(ParseType.direct, "SI", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "8!n", 8),Parse(ParseType.number, "2!n", 2)]);
		ret["FR"] = IBANData("", "5!n5!n11!c2!n", "FR2!n5!n5!n11!c2!n", 23, 27, ["branch_code":[5, 5], "bank_code":[0, 5], "account_code":[5, 23]], [Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "11!c", 11),Parse(ParseType.number, "2!n", 2)], [Parse(ParseType.direct, "FR", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "11!c", 11),Parse(ParseType.number, "2!n", 2)]);
		ret["HR"] = IBANData("", "7!n10!n", "HR2!n7!n10!n", 17, 21, ["branch_code":[7, 7], "bank_code":[0, 7], "account_code":[7, 17]], [Parse(ParseType.number, "7!n", 7),Parse(ParseType.number, "10!n", 10)], [Parse(ParseType.direct, "HR", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "7!n", 7),Parse(ParseType.number, "10!n", 10)]);
		ret["AX"] = IBANData("", "3!n11!n", "FI2!n3!n11!n", 14, 18, ["branch_code":[3, 3], "bank_code":[0, 3], "account_code":[3, 14]], [Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "11!n", 11)], [Parse(ParseType.direct, "FI", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "11!n", 11)]);
		ret["MU"] = IBANData("", "4!a2!n2!n12!n3!n3!a", "MU2!n4!a2!n2!n12!n3!n3!a", 26, 30, ["branch_code":[6, 8], "bank_code":[0, 6], "account_code":[8, 26]], [Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "12!n", 12),Parse(ParseType.number, "3!n", 3),Parse(ParseType.alpha, "3!a", 3)], [Parse(ParseType.direct, "MU", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "12!n", 12),Parse(ParseType.number, "3!n", 3),Parse(ParseType.alpha, "3!a", 3)]);
		ret["SE"] = IBANData("", "3!n16!n1!n", "SE2!n3!n16!n1!n", 20, 24, ["branch_code":[3, 3], "bank_code":[0, 3], "account_code":[3, 20]], [Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "16!n", 16),Parse(ParseType.number, "1!n", 1)], [Parse(ParseType.direct, "SE", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "16!n", 16),Parse(ParseType.number, "1!n", 1)]);
		ret["QA"] = IBANData("", "4!a21!c", "QA2!n4!a21!c", 25, 29, ["branch_code":[4, 4], "bank_code":[0, 4], "account_code":[4, 25]], [Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.alphanum, "21!c", 21)], [Parse(ParseType.direct, "QA", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.alphanum, "21!c", 21)]);
		ret["XK"] = IBANData("", "4!n10!n2!n", "XK2!n4!n10!n2!n", 16, 20, ["branch_code":[2, 4], "bank_code":[0, 2], "account_code":[4, 16]], [Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "10!n", 10),Parse(ParseType.number, "2!n", 2)], [Parse(ParseType.direct, "XK", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "10!n", 10),Parse(ParseType.number, "2!n", 2)]);
		ret["SK"] = IBANData("", "4!n6!n10!n", "SK2!n4!n6!n10!n", 20, 24, ["branch_code":[4, 4], "bank_code":[0, 4], "account_code":[4, 20]], [Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "6!n", 6),Parse(ParseType.number, "10!n", 10)], [Parse(ParseType.direct, "SK", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "6!n", 6),Parse(ParseType.number, "10!n", 10)]);
		ret["MD"] = IBANData("", "2!c18!c", "MD2!n2!c18!c", 20, 24, ["branch_code":[2, 2], "bank_code":[0, 2], "account_code":[2, 20]], [Parse(ParseType.alphanum, "2!c", 2),Parse(ParseType.alphanum, "18!c", 18)], [Parse(ParseType.direct, "MD", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.alphanum, "2!c", 2),Parse(ParseType.alphanum, "18!c", 18)]);
		ret["SM"] = IBANData("", "1!a5!n5!n12!c", "SM2!n1!a5!n5!n12!c", 23, 27, ["branch_code":[6, 11], "bank_code":[1, 6], "account_code":[11, 23]], [Parse(ParseType.alpha, "1!a", 1),Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "12!c", 12)], [Parse(ParseType.direct, "SM", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.alpha, "1!a", 1),Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "12!c", 12)]);
		ret["MK"] = IBANData("", "3!n10!c2!n", "MK2!n3!n10!c2!n", 15, 19, ["branch_code":[3, 3], "bank_code":[0, 3], "account_code":[3, 15]], [Parse(ParseType.number, "3!n", 3),Parse(ParseType.alphanum, "10!c", 10),Parse(ParseType.number, "2!n", 2)], [Parse(ParseType.direct, "MK", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "3!n", 3),Parse(ParseType.alphanum, "10!c", 10),Parse(ParseType.number, "2!n", 2)]);
		ret["DE"] = IBANData("", "8!n10!n", "DE2!n8!n10!n", 18, 22, ["branch_code":[8, 8], "bank_code":[0, 8], "account_code":[8, 18]], [Parse(ParseType.number, "8!n", 8),Parse(ParseType.number, "10!n", 10)], [Parse(ParseType.direct, "DE", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "8!n", 8),Parse(ParseType.number, "10!n", 10)]);
		ret["LC"] = IBANData("", "4!a24!c", "LC2!n4!a24!c", 28, 32, ["branch_code":[4, 4], "bank_code":[0, 4], "account_code":[4, 28]], [Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.alphanum, "24!c", 24)], [Parse(ParseType.direct, "LC", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.alphanum, "24!c", 24)]);
		ret["AE"] = IBANData("", "3!n16!n", "AE2!n3!n16!n", 19, 23, ["branch_code":[3, 3], "bank_code":[0, 3], "account_code":[3, 19]], [Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "16!n", 16)], [Parse(ParseType.direct, "AE", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "16!n", 16)]);
		ret["MF"] = IBANData("", "5!n5!n11!c2!n", "FR2!n5!n5!n11!c2!n", 23, 27, ["branch_code":[5, 5], "bank_code":[0, 5], "account_code":[5, 23]], [Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "11!c", 11),Parse(ParseType.number, "2!n", 2)], [Parse(ParseType.direct, "FR", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "11!c", 11),Parse(ParseType.number, "2!n", 2)]);
		ret["GB"] = IBANData("", "4!a6!n8!n", "GB2!n4!a6!n8!n", 18, 22, ["branch_code":[4, 10], "bank_code":[0, 4], "account_code":[10, 18]], [Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.number, "6!n", 6),Parse(ParseType.number, "8!n", 8)], [Parse(ParseType.direct, "GB", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.number, "6!n", 6),Parse(ParseType.number, "8!n", 8)]);
		ret["PS"] = IBANData("", "4!a21!c", "PS2!n4!a21!c", 25, 29, ["branch_code":[4, 4], "bank_code":[0, 4], "account_code":[4, 25]], [Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.alphanum, "21!c", 21)], [Parse(ParseType.direct, "PS", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.alphanum, "21!c", 21)]);
		ret["GL"] = IBANData("", "4!n9!n1!n", "GL2!n4!n9!n1!n", 14, 18, ["branch_code":[4, 4], "bank_code":[0, 4], "account_code":[4, 14]], [Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "9!n", 9),Parse(ParseType.number, "1!n", 1)], [Parse(ParseType.direct, "GL", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "9!n", 9),Parse(ParseType.number, "1!n", 1)]);
		ret["LU"] = IBANData("", "3!n13!c", "LU2!n3!n13!c", 16, 20, ["branch_code":[3, 3], "bank_code":[0, 3], "account_code":[3, 16]], [Parse(ParseType.number, "3!n", 3),Parse(ParseType.alphanum, "13!c", 13)], [Parse(ParseType.direct, "LU", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "3!n", 3),Parse(ParseType.alphanum, "13!c", 13)]);
		ret["IL"] = IBANData("", "3!n3!n13!n", "IL2!n3!n3!n13!n", 19, 23, ["branch_code":[3, 6], "bank_code":[0, 3], "account_code":[6, 19]], [Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "13!n", 13)], [Parse(ParseType.direct, "IL", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "13!n", 13)]);
		ret["TL"] = IBANData("", "3!n14!n2!n", "TL2!n3!n14!n2!n", 19, 23, ["branch_code":[3, 3], "bank_code":[0, 3], "account_code":[3, 19]], [Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "14!n", 14),Parse(ParseType.number, "2!n", 2)], [Parse(ParseType.direct, "TL", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "14!n", 14),Parse(ParseType.number, "2!n", 2)]);
		ret["LV"] = IBANData("", "4!a13!c", "LV2!n4!a13!c", 17, 21, ["branch_code":[4, 4], "bank_code":[0, 4], "account_code":[4, 17]], [Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.alphanum, "13!c", 13)], [Parse(ParseType.direct, "LV", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.alphanum, "13!c", 13)]);
		ret["TR"] = IBANData("", "5!n1!n16!c", "TR2!n5!n1!n16!c", 22, 26, ["branch_code":[5, 5], "bank_code":[0, 5], "account_code":[5, 22]], [Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "1!n", 1),Parse(ParseType.alphanum, "16!c", 16)], [Parse(ParseType.direct, "TR", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "1!n", 1),Parse(ParseType.alphanum, "16!c", 16)]);
		ret["FO"] = IBANData("", "4!n9!n1!n", "FO2!n4!n9!n1!n", 14, 18, ["branch_code":[4, 4], "bank_code":[0, 4], "account_code":[4, 14]], [Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "9!n", 9),Parse(ParseType.number, "1!n", 1)], [Parse(ParseType.direct, "FO", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "9!n", 9),Parse(ParseType.number, "1!n", 1)]);
		ret["IT"] = IBANData("", "1!a5!n5!n12!c", "IT2!n1!a5!n5!n12!c", 23, 27, ["branch_code":[6, 11], "bank_code":[1, 6], "account_code":[11, 23]], [Parse(ParseType.alpha, "1!a", 1),Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "12!c", 12)], [Parse(ParseType.direct, "IT", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.alpha, "1!a", 1),Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "12!c", 12)]);
		ret["PM"] = IBANData("", "5!n5!n11!c2!n", "FR2!n5!n5!n11!c2!n", 23, 27, ["branch_code":[5, 5], "bank_code":[0, 5], "account_code":[5, 23]], [Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "11!c", 11),Parse(ParseType.number, "2!n", 2)], [Parse(ParseType.direct, "FR", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "11!c", 11),Parse(ParseType.number, "2!n", 2)]);
		ret["WF"] = IBANData("", "5!n5!n11!c2!n", "FR2!n5!n5!n11!c2!n", 23, 27, ["branch_code":[5, 5], "bank_code":[0, 5], "account_code":[5, 23]], [Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "11!c", 11),Parse(ParseType.number, "2!n", 2)], [Parse(ParseType.direct, "FR", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "11!c", 11),Parse(ParseType.number, "2!n", 2)]);
		ret["VA"] = IBANData("", "3!n15!n", "VA2!n3!n15!n", 18, 22, ["branch_code":[3, 3], "bank_code":[0, 3], "account_code":[3, 18]], [Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "15!n", 15)], [Parse(ParseType.direct, "VA", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "15!n", 15)]);
		ret["VG"] = IBANData("", "4!a16!n", "VG2!n4!a16!n", 20, 24, ["branch_code":[4, 4], "bank_code":[0, 4], "account_code":[4, 20]], [Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.number, "16!n", 16)], [Parse(ParseType.direct, "VG", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.number, "16!n", 16)]);
		ret["BY"] = IBANData("", "4!c4!n16!c", "BY2!n4!c4!n16!c", 24, 28, ["branch_code":[4, 4], "bank_code":[0, 4], "account_code":[4, 24]], [Parse(ParseType.alphanum, "4!c", 4),Parse(ParseType.number, "4!n", 4),Parse(ParseType.alphanum, "16!c", 16)], [Parse(ParseType.direct, "BY", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.alphanum, "4!c", 4),Parse(ParseType.number, "4!n", 4),Parse(ParseType.alphanum, "16!c", 16)]);
		ret["EE"] = IBANData("", "2!n2!n11!n1!n", "EE2!n2!n2!n11!n1!n", 16, 20, ["branch_code":[2, 2], "bank_code":[0, 2], "account_code":[2, 16]], [Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "11!n", 11),Parse(ParseType.number, "1!n", 1)], [Parse(ParseType.direct, "EE", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "11!n", 11),Parse(ParseType.number, "1!n", 1)]);
		ret["AZ"] = IBANData("", "4!a20!c", "AZ2!n4!a20!c", 24, 28, ["branch_code":[4, 4], "bank_code":[0, 4], "account_code":[4, 24]], [Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.alphanum, "20!c", 20)], [Parse(ParseType.direct, "AZ", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.alphanum, "20!c", 20)]);
		ret["BR"] = IBANData("", "8!n5!n10!n1!a1!c", "BR2!n8!n5!n10!n1!a1!c", 25, 29, ["branch_code":[8, 13], "bank_code":[0, 8], "account_code":[13, 25]], [Parse(ParseType.number, "8!n", 8),Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "10!n", 10),Parse(ParseType.alpha, "1!a", 1),Parse(ParseType.alphanum, "1!c", 1)], [Parse(ParseType.direct, "BR", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "8!n", 8),Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "10!n", 10),Parse(ParseType.alpha, "1!a", 1),Parse(ParseType.alphanum, "1!c", 1)]);
		ret["KW"] = IBANData("", "4!a22!c", "KW2!n4!a22!c", 26, 30, ["branch_code":[4, 4], "bank_code":[0, 4], "account_code":[4, 26]], [Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.alphanum, "22!c", 22)], [Parse(ParseType.direct, "KW", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.alphanum, "22!c", 22)]);
		ret["NL"] = IBANData("", "4!a10!n", "NL2!n4!a10!n", 14, 18, ["branch_code":[4, 4], "bank_code":[0, 4], "account_code":[4, 14]], [Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.number, "10!n", 10)], [Parse(ParseType.direct, "NL", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.number, "10!n", 10)]);
		ret["PF"] = IBANData("", "5!n5!n11!c2!n", "FR2!n5!n5!n11!c2!n", 23, 27, ["branch_code":[5, 5], "bank_code":[0, 5], "account_code":[5, 23]], [Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "11!c", 11),Parse(ParseType.number, "2!n", 2)], [Parse(ParseType.direct, "FR", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "11!c", 11),Parse(ParseType.number, "2!n", 2)]);
		ret["TN"] = IBANData("", "2!n3!n13!n2!n", "TN2!n2!n3!n13!n2!n", 20, 24, ["branch_code":[2, 5], "bank_code":[0, 2], "account_code":[5, 20]], [Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "13!n", 13),Parse(ParseType.number, "2!n", 2)], [Parse(ParseType.direct, "TN", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "13!n", 13),Parse(ParseType.number, "2!n", 2)]);
		ret["IM"] = IBANData("", "4!a6!n8!n", "GB2!n4!a6!n8!n", 18, 22, ["branch_code":[4, 10], "bank_code":[0, 4], "account_code":[10, 18]], [Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.number, "6!n", 6),Parse(ParseType.number, "8!n", 8)], [Parse(ParseType.direct, "GB", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.number, "6!n", 6),Parse(ParseType.number, "8!n", 8)]);
		ret["CR"] = IBANData("", "4!n14!n", "CR2!n4!n14!n", 18, 22, ["branch_code":[4, 4], "bank_code":[0, 4], "account_code":[4, 18]], [Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "14!n", 14)], [Parse(ParseType.direct, "CR", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "14!n", 14)]);
		ret["PL"] = IBANData("", "8!n16!n", "PL2!n8!n16!n", 24, 28, ["branch_code":[0, 8], "bank_code":[0, 0], "account_code":[8, 24]], [Parse(ParseType.number, "8!n", 8),Parse(ParseType.number, "16!n", 16)], [Parse(ParseType.direct, "PL", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "8!n", 8),Parse(ParseType.number, "16!n", 16)]);
		ret["MQ"] = IBANData("", "5!n5!n11!c2!n", "FR2!n5!n5!n11!c2!n", 23, 27, ["branch_code":[5, 5], "bank_code":[0, 5], "account_code":[5, 23]], [Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "11!c", 11),Parse(ParseType.number, "2!n", 2)], [Parse(ParseType.direct, "FR", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "5!n", 5),Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "11!c", 11),Parse(ParseType.number, "2!n", 2)]);
		ret["GG"] = IBANData("", "4!a6!n8!n", "GB2!n4!a6!n8!n", 18, 22, ["branch_code":[4, 10], "bank_code":[0, 4], "account_code":[10, 18]], [Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.number, "6!n", 6),Parse(ParseType.number, "8!n", 8)], [Parse(ParseType.direct, "GB", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.number, "6!n", 6),Parse(ParseType.number, "8!n", 8)]);
		ret["GI"] = IBANData("", "4!a15!c", "GI2!n4!a15!c", 19, 23, ["branch_code":[4, 4], "bank_code":[0, 4], "account_code":[4, 19]], [Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.alphanum, "15!c", 15)], [Parse(ParseType.direct, "GI", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.alphanum, "15!c", 15)]);
		ret["IE"] = IBANData("", "4!a6!n8!n", "IE2!n4!a6!n8!n", 18, 22, ["branch_code":[4, 10], "bank_code":[0, 4], "account_code":[10, 18]], [Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.number, "6!n", 6),Parse(ParseType.number, "8!n", 8)], [Parse(ParseType.direct, "IE", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.number, "6!n", 6),Parse(ParseType.number, "8!n", 8)]);
		ret["CY"] = IBANData("", "3!n5!n16!c", "CY2!n3!n5!n16!c", 24, 28, ["branch_code":[3, 8], "bank_code":[0, 3], "account_code":[8, 24]], [Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "16!c", 16)], [Parse(ParseType.direct, "CY", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "16!c", 16)]);
		ret["LY"] = IBANData("", "3!n3!n15!n", "LY2!n3!n3!n15!n", 21, 25, ["branch_code":[3, 6], "bank_code":[0, 3], "account_code":[6, 21]], [Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "15!n", 15)], [Parse(ParseType.direct, "LY", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "15!n", 15)]);
		ret["HU"] = IBANData("", "3!n4!n1!n15!n1!n", "HU2!n3!n4!n1!n15!n1!n", 24, 28, ["branch_code":[3, 7], "bank_code":[0, 3], "account_code":[7, 24]], [Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "1!n", 1),Parse(ParseType.number, "15!n", 15),Parse(ParseType.number, "1!n", 1)], [Parse(ParseType.direct, "HU", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "3!n", 3),Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "1!n", 1),Parse(ParseType.number, "15!n", 15),Parse(ParseType.number, "1!n", 1)]);
		ret["NO"] = IBANData("", "4!n6!n1!n", "NO2!n4!n6!n1!n", 11, 15, ["branch_code":[4, 4], "bank_code":[0, 4], "account_code":[4, 11]], [Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "6!n", 6),Parse(ParseType.number, "1!n", 1)], [Parse(ParseType.direct, "NO", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "4!n", 4),Parse(ParseType.number, "6!n", 6),Parse(ParseType.number, "1!n", 1)]);
		ret["LI"] = IBANData("", "5!n12!c", "LI2!n5!n12!c", 17, 21, ["branch_code":[5, 5], "bank_code":[0, 5], "account_code":[5, 17]], [Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "12!c", 12)], [Parse(ParseType.direct, "LI", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "5!n", 5),Parse(ParseType.alphanum, "12!c", 12)]);
		ret["LB"] = IBANData("", "4!n20!c", "LB2!n4!n20!c", 24, 28, ["branch_code":[4, 4], "bank_code":[0, 4], "account_code":[4, 24]], [Parse(ParseType.number, "4!n", 4),Parse(ParseType.alphanum, "20!c", 20)], [Parse(ParseType.direct, "LB", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.number, "4!n", 4),Parse(ParseType.alphanum, "20!c", 20)]);
		ret["BH"] = IBANData("", "4!a14!c", "BH2!n4!a14!c", 18, 22, ["branch_code":[4, 4], "bank_code":[0, 4], "account_code":[4, 18]], [Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.alphanum, "14!c", 14)], [Parse(ParseType.direct, "BH", 2),Parse(ParseType.number, "2!n", 2),Parse(ParseType.alpha, "4!a", 4),Parse(ParseType.alphanum, "14!c", 14)]);
		hasBeenInited = true;
	}
	return ret;
}
